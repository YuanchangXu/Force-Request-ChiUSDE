- unless session[:uin].nil?
  = render 'layouts/login'
%h1 
  Admin Dashboard Page
= link_to '<button type="button" class="regularbutton">More Actions</button>'.html_safe, student_requests_adminprivileges_path
%h2= "Howdy! Welcome back #{session_get(:name)} "
= form_tag student_requests_adminview_path, :method => :get do
  %h4
  .filter_form1
    %strong Filter Requests - State: 
    // %br
    // %Strong Active: 
    // No action has been taken 
    // %br
    // %strong Approved: 
    // The force request has been approved by admin
    // %br
    // %strong Hold: 
    // The force request has not been approved nor rejected due to the course has reached its max capacity. The request is in the waiting list.
    // %br
    // %strong Rejected: 
    // The force request has been rejected
    // %br
    %table
    - @all_states.each do |state|
      %tr
        %td= check_box_tag "state_sel[#{state}]", 'true', @state_selected[state]      
        %td= state
    = submit_tag 'Refresh', class: "filter"
  .filter_form2
    %strong Filter Requests - Request Semester:
    %br
    %table
    - @all_request_semesters.each do |request_semester, index|
      %td= check_box_tag "request_semester_sel[#{request_semester}]", 'true', @request_semester_selected[request_semester]    
      %td= request_semester

    %br
    = submit_tag 'Refresh', class: "filter"


- @courselist.each do |course|
  - if @coursestudentlist[course].length != 0
    %h4
    %input{:onclick => "return toggleMe('student_requests_#{course}', '#{course}')", :type => "button", :value => "(-) CSCE #{course}", :id => course, :class => "course_id_button"}
    %div{:id => "student_requests_#{course}"}
      = form_tag(student_requests_sample_controller_path(), method: "put") do
        %table#student_requests.sortableadmin
          %thead 
            %tr
              %th{:width => "2%"} 
              // %th Id
              %th{:width => "5%"} UIN
              %th{:width => "12%"} Full Name
              %th{:width => "7%"} Major
              %th{:width => "5%"} Class
              /%th Minor
              %th{:width => "5.5%"} Section
              %th{:width => "7%"} Graduation
              %th{:width => "7%"} Semester
              %th{:width => "7%"} State
              %th{:width => "7.5%"} Student Priority
              /%th Admin Priority
              %th{:width => "7%"} Submission Date
              /%th Admin Notes
              %th{:width => "5%"} Logs
              %th{:width => "7%"} Details
              /%th Actions
        
          %tbody
            - @coursestudentlist[course].each do |record|
              %tr{:class => "#{cycle('oddrow', 'evenrow')}"}
                %td= check_box_tag "request_ids[]", record.request_id, false, data: { "mail" => "#{record.email}"}, "sub" => course 
                // %td %a{:onclick => "return getDetailsById('#{record.request_id}')"} #{record.request_id}
                %td= record.uin
                %td
                  %a{:onclick => "return buttonclick(#{record.uin});"} #{record.name}
                %td= record.major
                %td= record.classification
                /%td= record.minor
                %td= record.section_id
                %td= record.expected_graduation
                %td= record.request_semester
                %td{:class => "#{record.state}"}= record.state
                %td= record.priority
                /%td= if record.admin_priority then record.admin_priority else "(View details to add priority)" end
                %td= record.creation_date.strftime("%Y-%m-%d %H:%M:%S")
                /%td= if record.admin_notes then record.admin_notes else "(View details to add notes)" end
                %td= (link_to 'Logs', {:action => "view_logs", :controller => "student_requests", :id => record.request_id}, :method => :get)   
                %td
                  %a{:onclick => "return getDetailsById('#{record.request_id}')"} #{"Details"}
                  
                  
                /%td= (link_to 'Hold', {:action => "hold", :controller => "student_requests", :id => record.request_id,:message => "You are on Hold"}, :method => :put)   
                
            %table{ :class => "multiUpdate" }
              %tr
                %td= select_tag("multi_state_sel", options_for_select(@allAdminStates))
                //%td= select_tag("state", options_for_select(@allPriorityStates))
                //update
                //%td= select_tag("multi_priority_sel", options_for_select(@allPriorityStates))
                %td= submit_tag "Update Selected"
                %td= link_to "Email Selected", "", :onclick => "multi_email(\"#{course}\"); return false"
              %tr{ :class => "excel_sheet"}
               
              
%p= link_to "Download the entire Force Request System data as an Excel Sheet", student_requests_getSpreadsheetAllCourses_path(format: "csv"), :id => 'download_table'
%p= link_to "Download the entire Force Request System Logs data as an Excel Sheet", student_requests_getAllLogs_path(format: "csv"), :id => 'download_table'
#myModal.modal
  %span.close{:onclick => "return spanclick()"} x
  .modal-content